from aiogram.types import ParseMode
from aiogram.utils.markdown import quote_html
#
from utilis.main_common import plus_to_reg_messages, minus_to_reg_messages
#
from sides_bot.reg_aut.utilis.consts import visiting_system_kb, is_all_right_reg_kb


async def cancel_reg_or_aut(state, chat_id, bot, first_actions,
                            cursor, conn,
                            action_reg=True, restart=False):
    async with state.proxy() as data:
        id_work = data.get('id_work')
        id_begin = data.get('id_begin')
        first_point = data.get('first_point')

    await bot.delete_message(chat_id=chat_id, message_id=id_work)
    await bot.delete_message(chat_id=chat_id, message_id=first_point)
    await bot.edit_message_text(f'{"üöÄ–ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–¢–¨–°–ØüöÄ" if action_reg else "‚úàÔ∏è–í–û–ô–¢–ò‚úà"}\n\n'
                                f'{"‚ùå*–û–¢–ú–ï–ù–ï–ù–û*‚ùå" if not restart else "‚ôª*Ô∏è–ü–ï–†–ï–ó–ê–ü–£–©–ï–ù–û*‚ôªÔ∏è"}',
                                chat_id=chat_id,
                                message_id=id_begin,
                                parse_mode=ParseMode.MARKDOWN)
    await state.finish()
    minus_to_reg_messages(cursor, conn, chat_id)

    await first_actions.waiting_command.set()
    await bot.edit_message_text('üîÖ*–í—Ö–æ–¥ –≤ DAY PLAN*üîÖ\n\n'
                                '`|-|-|-|`\n\n'
                                'üí†–í–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, '
                                '—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å–ª—É–≥–∞–º DAY PLANüí†',
                                chat_id=chat_id,
                                message_id=id_begin,
                                parse_mode=ParseMode.MARKDOWN,
                                reply_markup=visiting_system_kb)
    plus_to_reg_messages(cursor, conn,
                         (chat_id, id_begin))


async def all_right_asking(state, chat_id, bot):
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º: –µ—Å—Ç—å –ª–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async with state.proxy() as data:
        is_appeal_existing = \
            f"<b>Ô∏èÔ∏è‚ñ´–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:</b> <code>{quote_html(data['appeal_user'])}</code>Ô∏è\n" if data.get('appeal_user') \
            else ""

        await bot.edit_message_text(f'üñ±<b>4/4üñ±</b>\n\n'
                                    f'‚ùîÔ∏è|–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã, {chat_id}, —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏|‚ùî\n\n'
                                    f'Ô∏è{is_appeal_existing}'
                                    f'‚ñ´<b>–í–∞—à –ª–æ–≥–∏–Ω:</b> <code>{quote_html(data["login_user"])}</code>\n'
                                    f'‚ñ´<b>–í–∞—à –ø–∞—Ä–æ–ª—å:</b> <code>{quote_html(data["password_user"])}</code>\n\n',
                                    chat_id=chat_id,
                                    message_id=data['id_work'],
                                    parse_mode=ParseMode.HTML,
                                    reply_markup=is_all_right_reg_kb)
